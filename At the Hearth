<CsoundSynthesizer>
<CsInstruments>

sr = 44100
ksmps = 32
nchnls=2
0dbfs=1

; Generation of noise and effects

instr 3 
kPlayButton chnget "playButton" 
if changed(kPlayButton) == 1 then 
if kPlayButton == 1 then 
event "i", "CRACKLE", 0, -1 
event "i", "HISS", 0, -1 
event "i", "FLAMES", 0, -1 
else 
turnoff2 "CRACKLE", 1, 0 
turnoff2 "HISS", 1, 0 
turnoff2 "FLAMES", 1, 0 
endif 
endif
endin

; Imitation of crackle (CRACKLE)
instr CRACKLE
a1 dust2 1, chnget:k("density") ; Noise from crackle
a1 = a1 * 0.5 ; Reduce the amplitude so the sound is not too loud
outs a1 * chnget:k("crackleGain"), a1 * chnget:k("crackleGain") ; Output sound
endin

; Imitation of noise (HISS)
instr HISS
aNoise1 noise 0.8, 0 ; Noise with amplitude 0.8
aFlt butterhp aNoise1, 2000 ; Low-pass filtering
outs aFlt * chnget:k("hissNoise"), aFlt * chnget:k("hissNoise") ; Output processed noise
endin

; Flame Simulation (FLAMES)
instr FLAMES
a1 noise 1, 0 ; Synthetic noise
a2 tone a1, 100 + jitter:k(10, 1, 3) ; Add random frequency changes to flame
outs a2 * chnget:k("flameGain"), a2 * chnget:k("flameGain") ; Flame output
endin

</CsInstruments>

<CsScore>
f1 0 4096 10 1 ; Generate wavetable
i 3 0 [60*60*24*7] ; Run main instrument for entire duration
e
</CsScore>

</CsoundSynthesizer>
